// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StaffCelebrationSystemAPI.Data;

namespace StaffCelebrationSystemAPI.Data.Migrations
{
    [DbContext(typeof(StaffSystemDBContext))]
    partial class StaffSystemDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StaffCelebrationSystemAPI.Entities.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsAdmin");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("StaffCelebrationSystemAPI.Models.Entities.Event", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfEvent");

                    b.Property<Guid>("EmployeeId");

                    b.Property<string>("EventName");

                    b.Property<int>("EventType");

                    b.Property<bool>("IsPrivate");

                    b.Property<Guid>("MyProperty");

                    b.HasKey("EventId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("StaffCelebrationSystemAPI.Models.Entities.EventEmailToNotify", b =>
                {
                    b.Property<Guid>("EventId");

                    b.Property<Guid>("EmailToNotifyId");

                    b.HasKey("EventId", "EmailToNotifyId");

                    b.HasIndex("EmailToNotifyId");

                    b.ToTable("EventEmails");
                });

            modelBuilder.Entity("StaffCelebrationSystemAPI.Models.Entities.PrivateEmailToNotify", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailAddress");

                    b.HasKey("Id");

                    b.ToTable("EmailsToNotify");
                });

            modelBuilder.Entity("StaffCelebrationSystemAPI.Models.Entities.Event", b =>
                {
                    b.HasOne("StaffCelebrationSystemAPI.Entities.Employee", "Employee")
                        .WithMany("Events")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StaffCelebrationSystemAPI.Models.Entities.EventEmailToNotify", b =>
                {
                    b.HasOne("StaffCelebrationSystemAPI.Models.Entities.PrivateEmailToNotify", "EmailToNotify")
                        .WithMany("EmailsToNotify")
                        .HasForeignKey("EmailToNotifyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StaffCelebrationSystemAPI.Models.Entities.Event", "Event")
                        .WithMany("EmailsToNotify")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
